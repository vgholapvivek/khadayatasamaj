<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;

use App\Http\Requests\Store{{modelName}}Request;
use App\Http\Requests\Update{{modelName}}Request;

class DummyClass extends Controller
{


    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */



    public function __construct()
    {
        $this->authorizeResource({{modelName}}::class);
    }


    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\View\View
     */
    public function index(Request $request)
    {
        $keyword = $request->get('search');
        $perPage = {{pagination}};

        if (!empty($keyword)) {
            ${{crudName}} = {{modelName}}::{{whereSnippet}}latest()->paginate($perPage);
        } else {
            ${{crudName}} = {{modelName}}::latest()->paginate($perPage);
        }

        return view('{{viewPath}}{{viewName}}.index', compact('{{crudName}}'));
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\View\View
     */
    public function create()
    {
        return view('{{viewPath}}{{viewName}}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function store(Store{{modelName}}Request $request)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        {{modelName}}::create($requestData);

        return redirect('{{routeGroup}}{{viewName}}')->with('success', '{{modelName}} added!');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     *
     * @return \Illuminate\View\View
     */
    public function show({{modelName}} ${{crudNameSingular}})
    {
        return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     *
     * @return \Illuminate\View\View
     */
    public function edit({{modelName}} ${{crudNameSingular}})
    {
 

        return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     * @param  int  $id
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function update(Update{{modelName}}Request $request, {{modelName}} ${{crudNameSingular}})
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
    
        ${{crudNameSingular}}->update($requestData);

        return redirect('{{routeGroup}}{{viewName}}')->with('success', '{{modelName}} updated!');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function destroy( {{modelName}} ${{crudNameSingular}})
    {
        ${{crudNameSingular}}->delete();

        return redirect('{{routeGroup}}{{viewName}}')->with('success', '{{modelName}} deleted!');
    }
}
